/* 
 * 
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// NgramsResultResults : Ngrams matching the given options

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct NgramsResultResults {
  /// The number of times the ngram (a sequence of n words) appears in the corpus
  #[serde(rename = "frequency")]
  frequency: i32,
  /// A list of tokens
  #[serde(rename = "tokens")]
  tokens: Vec<String>
}

impl NgramsResultResults {
  /// Ngrams matching the given options
  pub fn new(frequency: i32, tokens: Vec<String>) -> NgramsResultResults {
    NgramsResultResults {
      frequency: frequency,
      tokens: tokens
    }
  }

  pub fn set_frequency(&mut self, frequency: i32) {
    self.frequency = frequency;
  }

  pub fn with_frequency(mut self, frequency: i32) -> NgramsResultResults {
    self.frequency = frequency;
    self
  }

  pub fn frequency(&self) -> &i32 {
    &self.frequency
  }


  pub fn set_tokens(&mut self, tokens: Vec<String>) {
    self.tokens = tokens;
  }

  pub fn with_tokens(mut self, tokens: Vec<String>) -> NgramsResultResults {
    self.tokens = tokens;
    self
  }

  pub fn tokens(&self) -> &Vec<String> {
    &self.tokens
  }


}



