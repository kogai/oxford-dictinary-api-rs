/* 
 * 
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CategorizedTextListInner {
  /// The identifier of the word
  #[serde(rename = "id")]
  id: Option<String>,
  /// A note text
  #[serde(rename = "text")]
  text: String,
  /// The descriptive category of the text
  #[serde(rename = "type")]
  _type: String
}

impl CategorizedTextListInner {
  pub fn new(text: String, _type: String) -> CategorizedTextListInner {
    CategorizedTextListInner {
      id: None,
      text: text,
      _type: _type
    }
  }

  pub fn set_id(&mut self, id: String) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: String) -> CategorizedTextListInner {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&String> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

  pub fn set_text(&mut self, text: String) {
    self.text = text;
  }

  pub fn with_text(mut self, text: String) -> CategorizedTextListInner {
    self.text = text;
    self
  }

  pub fn text(&self) -> &String {
    &self.text
  }


  pub fn set__type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with__type(mut self, _type: String) -> CategorizedTextListInner {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


}



