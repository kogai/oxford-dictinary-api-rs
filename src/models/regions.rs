/* 
 * 
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// Regions : Schema for region endpoint.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Regions {
  /// Additional Information provided by OUP
  #[serde(rename = "metadata")]
  metadata: Option<Value>,
  /// A mapping of regions available.
  #[serde(rename = "results")]
  results: Option<::std::collections::HashMap<String, ::models::Arrayofstrings>>
}

impl Regions {
  /// Schema for region endpoint.
  pub fn new() -> Regions {
    Regions {
      metadata: None,
      results: None
    }
  }

  pub fn set_metadata(&mut self, metadata: Value) {
    self.metadata = Some(metadata);
  }

  pub fn with_metadata(mut self, metadata: Value) -> Regions {
    self.metadata = Some(metadata);
    self
  }

  pub fn metadata(&self) -> Option<&Value> {
    self.metadata.as_ref()
  }

  pub fn reset_metadata(&mut self) {
    self.metadata = None;
  }

  pub fn set_results(&mut self, results: ::std::collections::HashMap<String, ::models::Arrayofstrings>) {
    self.results = Some(results);
  }

  pub fn with_results(mut self, results: ::std::collections::HashMap<String, ::models::Arrayofstrings>) -> Regions {
    self.results = Some(results);
    self
  }

  pub fn results(&self) -> Option<&::std::collections::HashMap<String, ::models::Arrayofstrings>> {
    self.results.as_ref()
  }

  pub fn reset_results(&mut self) {
    self.results = None;
  }

}



